/*
Copyright 2015, 2016 OpenMarket Ltd
Copyright 2018 New Vector Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

.mx_MessageComposer_wrapper {
    vertical-align: middle;
    margin: auto;
    border-block-start: 1px solid $primary-hairline-color;
    position: relative;

    display: grid;
    grid-template:
        "reply    reply"    auto
        "composer controls" auto
        / 1fr     auto;

    /* the below is required, without this some unexpected scroll jump
       will occur when erasing the composer content or jumping to voice note
       recording */
    min-height: 45px;

    .mx_ReplyPreview {
        grid-area: reply;
    }

    .mx_MessageComposer_row {
        min-width: 0;
        grid-area: composer;
    }

    .mx_MessageComposer_controls {
        grid-area: controls;
        display: flex;
        align-items: flex-end;
        margin-block-end: 2px;
    }

    >[role=button] {
        margin-block-end: 7px;
    }

    .mx_VoiceRecordComposerTile_delete {
        margin-block-end: 9px;
    }

    .mx_VoiceRecordComposerTile_stop,
    .mx_MessageComposer_sendMessage {
        margin-block-end: $spacing-4;
    }

    .mx_VoiceMessagePrimaryContainer {
        margin-inline-end: $spacing-8;
    }
}

.mx_MessageComposer_autocomplete_wrapper {
    position: relative;
    height: 0;
}

.mx_MessageComposer_row {
    display: flex;
    flex-direction: row;
    align-items: center;
    border: 1px solid $quaternary-content;
    border-radius: 12px;
    padding: $spacing-12 $spacing-8;
    margin-inline-end: $spacing-16;

    transition: border-color var(--transition-short);

    &[data-notice=true] {
        border-color: transparent;
        color: $secondary-content;

        p {
            margin: 0;
            line-height: 0;
        }

        svg {
            vertical-align: middle;
            position: relative;
            top: -2px;
        }
    }

    &:focus-within {
        border-color: $tertiary-content;
    }

    &[aria-disabled=true] {
        cursor: not-allowed;
    }
}

.mx_MessageComposer .mx_MessageComposer_avatar {
    position: absolute;
    inset-inline-start: 26px;
}

.mx_MessageComposer .mx_MessageComposer_avatar .mx_BaseAvatar {
    display: block;
}

.mx_MessageComposer_composecontrols {
    width: 100%;
}

.mx_MessageComposer_e2eIcon.mx_E2EIcon {
    margin: 0 0 2px;
    width: 12px;
    height: 12px;
    align-self: end;
}

.mx_MessageComposer_noperm_error {
    font-style: italic;
    color: $tertiary-content;
    font-size: $font-12px;
}

.mx_MessageComposer_input_wrapper {
    flex: 1;
    display: flex;
    flex-direction: column;
    cursor: text;
}

.mx_MessageComposer_input {
    flex: 1;
    vertical-align: middle;
    display: flex;
    flex-direction: column;
    min-height: 60px;
    justify-content: flex-start;
    align-items: flex-start;
    font-size: $font-14px;
    margin-inline-end: 6px;
}

.mx_MessageComposer_editor {
    width: 100%;
    max-height: 120px;
    min-height: 19px;
    overflow-y: auto;
    overflow-x: hidden;
    word-break: break-word;
}

// FIXME: rather unpleasant hack to get rid of <p/> margins.
// really we should be mixing in markdown-body from gfm.css instead
.mx_MessageComposer_editor > :first-child {
    margin-block-start: 0 !important;
}

.mx_MessageComposer_editor > :last-child {
    margin-block-end: 0 !important;
}

@keyframes visualbell {
    from {
        background-color: $visual-bell-bg-color;
    }

    to {
        background-color: $background;
    }
}

.mx_MessageComposer_input_error {
    animation: 0.2s visualbell;
}

.mx_MessageComposer_input pre {
    background-color: $rte-code-bg-color;
    border-radius: 3px;
    padding: 10px;
}

.mx_MessageComposer_input textarea {
    display: block;
    width: 100%;
    padding: 0px;
    margin-block-start: 6px;
    margin-block-end: 6px;
    border: 0px;
    resize: none;
    outline: none;
    box-shadow: none;
    color: $primary-content;
    background-color: $background;
    font-size: $font-14px;
    max-height: 120px;
    overflow: auto;
}

/* hack for FF as vertical alignment of custom placeholder text is broken */
.mx_MessageComposer_input textarea::-moz-placeholder {
    line-height: 100%;
    color: $accent;
    opacity: 1.0;
}

.mx_MessageComposer_input textarea::-webkit-input-placeholder {
    color: $accent;
}

.mx_MessageComposer_button_highlight {
    background: rgba($accent, 0.25);

    // make the icon the accent color too
    &::before {
        background-color: $accent !important;
    }
}

.mx_MessageComposer_button {
    --size: 26px;
    position: relative;
    cursor: pointer;
    height: var(--size);
    line-height: var(--size);
    width: auto;
    padding-inline-start: var(--size);
    border-radius: 50%;
    margin-inline-end: 6px;
    margin-block-end: 7px;

    &:last-child {
        margin-inline-end: auto;
    }

    &::before {
        content: '';
        position: absolute;
        top: 3px;
        inset-inline-start: 3px;
        height: 20px;
        width: 20px;
        background-color: $icon-button-color;
        mask-repeat: no-repeat;
        mask-size: contain;
        mask-position: center;
    }

    &::after {
        content: '';
        position: absolute;
        inset-inline-start: 0;
        top: 0;
        z-index: 0;
        width: var(--size);
        height: var(--size);
        border-radius: 50%;
    }

    &:hover,
    &.mx_MessageComposer_closeButtonMenu {
        &::after {
            background: rgba($accent, 0.1);
        }

        &::before {
            background-color: $accent;
        }
    }

    &.mx_MessageComposer_hangup:not(.mx_AccessibleButton_disabled)::before {
        background-color: $alert;
    }
}

.mx_MessageComposer_upload::before {
    mask-image: url('$(res)/img/element-icons/room/composer/attach.svg');
}

.mx_MessageComposer_poll::before {
    mask-image: url('$(res)/img/element-icons/room/composer/poll.svg');
}

.mx_MessageComposer_voiceMessage::before {
    mask-image: url('$(res)/img/voip/mic-on-mask.svg');
}

.mx_MessageComposer_emoji::before {
    mask-image: url('$(res)/img/element-icons/room/composer/emoji.svg');
}

.mx_MessageComposer_location::before {
    mask-image: url('$(res)/img/element-icons/room/composer/location.svg');
}

.mx_MessageComposer_stickers::before {
    mask-image: url('$(res)/img/element-icons/room/composer/sticker.svg');
}

.mx_MessageComposer_buttonMenu::before {
    mask-image: url('$(res)/img/image-view/more.svg');
}

.mx_MessageComposer_sendMessageWrapper {
    --sendMessageSize: 32px;
    transition: all var(--transition-short);
}

.mx_MessageComposer_sendMessageWrapper,
.mx_MessageComposer_sendMessageWrapper-enter,
.mx_MessageComposer_sendMessageWrapper-exit {
    width: 0;
    transform: scale(.6);
    opacity: 0;
}

.mx_MessageComposer_sendMessageWrapper-enter-active {
    width: var(--sendMessageSize);
    transform: scale(1);
    opacity: 1;
}

.mx_MessageComposer_sendMessage {
    cursor: pointer;
    position: relative;
    width: var(--sendMessageSize);
    height: var(--sendMessageSize);
    border-radius: 100%;
    background-color: $accent;

    &::before {
        position: absolute;
        height: 16px;
        width: 16px;
        top: 8px;
        inset-inline-start: 9px;

        mask-image: url('$(res)/img/element-icons/send-message.svg');
        mask-repeat: no-repeat;
        mask-size: contain;
        mask-position: center;

        background-color: $button-fg-color;
        content: '';
    }
}

.mx_MessageComposer_formatting {
    cursor: pointer;
    margin: 0 11px;
    width: 24px;
    height: 18px;
}

.mx_MessageComposer_formatbar_wrapper {
    width: 100%;
    background-color: $menu-bg-color;
    box-shadow: inset 0 1px 0 0 rgba(0, 0, 0, 0.08);
}

.mx_MessageComposer_formatbar {
    margin: auto;
    display: flex;

    height: 30px;

    box-sizing: border-box;
    padding-inline-start: 62px;

    flex-direction: row;
    align-items: center;
    font-size: $font-10px;
    color: $info-plinth-fg-color;
}

.mx_MessageComposer_formatbar * {
    margin-inline-end: 4px;
}

.mx_MessageComposer_format_button,
.mx_MessageComposer_formatbar_cancel,
.mx_MessageComposer_formatbar_markdown {
    cursor: pointer;
}

.mx_MessageComposer_formatbar_cancel {
    margin-inline-end: 22px;
}

.mx_MessageComposer_formatbar_markdown {
    height: 17px;
    width: 30px;
    margin-inline-end: 64px;
}

.mx_MessageComposer_input_markdownIndicator {
    height: 10px;
    width: 12px;
    padding: 4px 4px 4px 0;
}

.mx_MessageComposer_formatbar_markdown,
.mx_MessageComposer_input_markdownIndicator {
    cursor: pointer;
    mask-image: url('$(res)/img/markdown.svg');
    mask-size: contain;
    mask-position: center;
    mask-repeat: no-repeat;
    background-color: $icon-button-color;

    &.mx_MessageComposer_markdownDisabled {
        opacity: 0.2;
    }
}

.mx_MatrixChat_useCompactLayout {
    .mx_MessageComposer_input {
        min-height: 50px;
    }
}

/**
 * Unstable compact mode
 */

.mx_MessageComposer.mx_MessageComposer--compact {
    margin-inline-end: 0;

    .mx_MessageComposer_button:last-child {
        margin-inline-end: 0;
    }
}
